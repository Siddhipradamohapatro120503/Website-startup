version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=https://shreetech.org/api
    networks:
      - app-network
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    expose:
      - "5000"
    environment:
      - MONGODB_URI=mongodb://${mongo_user}:${mongo_password}@mongodb:27017/startup_db?authSource=admin
      - NODE_ENV=production
      - CORS_ORIGIN=https://shreetech.org
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:latest
    expose:
      - "27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${mongo_user}
      - MONGO_INITDB_ROOT_PASSWORD=${mongo_password}
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
