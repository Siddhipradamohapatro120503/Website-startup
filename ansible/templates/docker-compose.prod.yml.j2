version: '3.8'

services:
  frontend:
    image: {{ dockerhub_username }}/startup-frontend:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    image: {{ dockerhub_username }}/startup-backend:latest
    restart: always
    expose:
      - "5000"
    environment:
      - MONGODB_URI=mongodb://{{ mongo_user }}:{{ mongo_password }}@mongodb:27017/startup_db?authSource=admin
      - NODE_ENV=production
      - RAZORPAY_KEY_ID={{ razorpay_key_id }}
      - RAZORPAY_KEY_SECRET={{ razorpay_key_secret }}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:latest
    restart: always
    expose:
      - "27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: {{ mongo_user }}
      MONGO_INITDB_ROOT_PASSWORD: {{ mongo_password }}
      MONGO_INITDB_DATABASE: startup_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    name: mongodb_data
